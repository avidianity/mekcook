name: API

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: testing
      DB_USERNAME: mekcook
      DB_PASSWORD: password
      JWT_SECRET: secret
      JWT_ISSUER: mekcook-localhost
      APP_PORT: 8000
      TZ: UTC
      HASH_ROUNDS: 4
      NODE_ENV: test
      DOTENV_CONFIG_PATH: .env.test

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_ROOT_HOST: "%"
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"${DB_HOST}" -u"${DB_USERNAME}" -p"${DB_PASSWORD}" --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
      - name: Run migrations
        run: npx drizzle-kit push --config drizzle.config.ts

      - name: Create testing database and grant privileges
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
        run: |
          chmod +x ./docker/create-testing-database.sh
          ./docker/create-testing-database.sh

      - name: Run tests
        run: npm test
